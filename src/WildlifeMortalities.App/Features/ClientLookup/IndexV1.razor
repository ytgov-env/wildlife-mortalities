@page "/v1/clients"
@using WildlifeMortalities.App.Data

@*<MudText Typo="Typo.h3" Class="mb-8">Select a client</MudText>*@
<MudDataGrid Items="Clients" QuickFilter="@_quickFilter" Sortable="true" Filterable="true" T="Client" RowClick="@RowClicked" Hover="true" RowClass="cursor-pointer">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Clients</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Placeholder="Search by ClientId" Adornment="Adornment.Start" Immediate="true"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        <MudSpacer />
    </ToolBarContent>
    <Columns>
        <Column T="Client" Field="ClientId" Sortable="false" Filterable="false" />
        <Column T="Client" Title="Name" Sortable="false" Filterable="false" />
        <Column T="Client" Title="Date of Birth" Sortable="false" Filterable="false" />
        <Column T="Client" Field="HasActiveHuntingLicence" Title="Active Hunting Licence" Filterable="false" />
        <Column T="Client" Field="HasActiveTrappingLicence" Title="Active Trapping Licence" Filterable="false" />
        <Column T="Client" Field="ActiveSeals" Title="# Active Seals" />
    </Columns>
    <PagerContent>
        <MudDataGridPager T="Client" />
    </PagerContent>
</MudDataGrid>

@code {
    private string _searchString;

    [Inject]
    private NavigationManager Navigation { get; set; } = null!;

    public List<Client> Clients { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var rand = new Random();
        for (int i = 0; i < 20000; i++)
        {
            Clients.Add(new Client { Id = i, ClientId = rand.Next(10000, 60000), HasActiveHuntingLicence = rand.Next(2) == 0, HasActiveTrappingLicence = rand.Next(2) == 0, ActiveSeals = rand.Next(0, 3) });
        }

        await base.OnInitializedAsync();
    }

    private Func<Client, bool> _quickFilter => client =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;

        if (client.ClientId.ToString().StartsWith(_searchString))
            return true;

        return false;
    };

    public void RowClicked(DataGridRowClickEventArgs<Client> p)
    {
        Navigation.NavigateTo("/v1/clients/" + p.Item.ClientId + "/seals");
    }
}